name: Android Build (One-file repo)

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # === สร้างโปรเจกต์ Android ทั้งชุดในไลฟ์รัน (repo จะว่างก็ได้) ===
      - pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
}
rootProject.name = "RecoverX"
include(":app")
          EOF

          cat > RecoverX/build.gradle.kts << 'EOF'
          plugins {
              id("com.android.application") version "8.5.2" apply false
              kotlin("android") version "1.9.24" apply false
          }
          EOF

          cat > RecoverX/app/build.gradle.kts << 'EOF'
          plugins {
              id("com.android.application")
              kotlin("android")
          }
          android {
              namespace = "com.example.recoverx"
              compileSdk = 34
              defaultConfig {
                  applicationId = "com.example.recoverx"
                  minSdk = 24
                  targetSdk = 34
                  versionCode = 1
                  versionName = "1.0"
              }
              buildTypes {
                  release {
                      isMinifyEnabled = false
                      proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
                  }
              }
              buildFeatures { viewBinding = true }
              packaging { resources.excludes += "/META-INF/{AL2.0,LGPL2.1}" }
          }
          dependencies {
              implementation("androidx.core:core-ktx:1.13.1")
              implementation("androidx.appcompat:appcompat:1.7.0")
              implementation("com.google.android.material:material:1.12.0")
              implementation("androidx.activity:activity-ktx:1.9.2")
              implementation("androidx.constraintlayout:constraintlayout:2.1.4")
          }
          EOF

          cat > RecoverX/app/src/main/AndroidManifest.xml << 'EOF'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.example.recoverx">
              <uses-feature android:name="android.hardware.usb.host" android:required="false" />
              <uses-permission android:name="android.permission.READ_MEDIA_IMAGES"/>
              <uses-permission android:name="android.permission.READ_MEDIA_VIDEO"/>
              <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" android:maxSdkVersion="32"/>
              <application android:label="RecoverX" android:icon="@mipmap/ic_launcher" android:theme="@style/Theme.Material3.DayNight.NoActionBar">
                  <activity android:name=".MainActivity" android:exported="true">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
              </application>
          </manifest>
          EOF

          cat > RecoverX/app/src/main/java/com/example/recoverx/MainActivity.kt << 'EOF'
          package com.example.recoverx
          import android.content.Intent
          import android.net.Uri
          import android.os.Bundle
          import android.widget.Toast
          import androidx.activity.result.contract.ActivityResultContracts
          import androidx.appcompat.app.AppCompatActivity
          import com.example.recoverx.databinding.ActivityMainBinding

          class MainActivity : AppCompatActivity() {
              private lateinit var b: ActivityMainBinding

              private val pickDir = registerForActivityResult(ActivityResultContracts.OpenDocumentTree()) { uri: Uri? ->
                  if (uri != null) {
                      contentResolver.takePersistableUriPermission(
                          uri, Intent.FLAG_GRANT_READ_URI_PERMISSION or Intent.FLAG_GRANT_WRITE_URI_PERMISSION
                      )
                      Toast.makeText(this, "เลือกโฟลเดอร์: $uri", Toast.LENGTH_LONG).show()
                  } else Toast.makeText(this, "ยกเลิก", Toast.LENGTH_SHORT).show()
              }

              private val openFile = registerForActivityResult(ActivityResultContracts.OpenDocument()) { uri: Uri? ->
                  if (uri != null) Toast.makeText(this, "เปิดไฟล์: $uri", Toast.LENGTH_LONG).show()
                  else Toast.makeText(this, "ยกเลิก", Toast.LENGTH_SHORT).show()
              }

              override fun onCreate(savedInstanceState: Bundle?) {
                  super.onCreate(savedInstanceState)
                  b = ActivityMainBinding.inflate(layoutInflater)
                  setContentView(b.root)
                  b.btnPickRecoveryTarget.setOnClickListener { pickDir.launch(null) }
                  b.btnPickFile.setOnClickListener { openFile.launch(arrayOf("image/*","video/*")) }
                  b.btnQuickScan.setOnClickListener { Toast.makeText(this,"สแกนปลอดภัย (เดโม)",Toast.LENGTH_LONG).show() }
                  b.btnDeepScan.setOnClickListener { Toast.makeText(this,"สแกนลึก (เดโม)",Toast.LENGTH_LONG).show() }
                  b.btnCopySafe.setOnClickListener { Toast.makeText(this,"คัดลอกปลอดภัย (เดโม)",Toast.LENGTH_LONG).show() }
              }
          }
          EOF

          cat > RecoverX/app/src/main/res/layout/activity_main.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:orientation="vertical" android:padding="20dp"
              android:layout_width="match_parent" android:layout_height="match_parent">
              <Button android:id="@+id/btnPickRecoveryTarget" android:text="เลือกโฟลเดอร์ปลายทาง (SAF)"
                  android:layout_width="match_parent" android:layout_height="wrap_content"/>
              <Button android:id="@+id/btnPickFile" android:text="เปิดไฟล์รูป/วีดีโอ (SAF)"
                  android:layout_width="match_parent" android:layout_height="wrap_content" android:layout_marginTop="12dp"/>
              <Button android:id="@+id/btnQuickScan" android:text="สแกนแบบปลอดภัย"
                  android:layout_width="match_parent" android:layout_height="wrap_content" android:layout_marginTop="24dp"/>
              <Button android:id="@+id/btnDeepScan" android:text="สแกนเชิงลึก"
                  android:layout_width="match_parent" android:layout_height="wrap_content" android:layout_marginTop="12dp"/>
              <Button android:id="@+id/btnCopySafe" android:text="คัดลอกไฟล์แบบปลอดภัย"
                  android:layout_width="match_parent" android:layout_height="wrap_content" android:layout_marginTop="12dp"/>
          </LinearLayout>
          EOF

          cat > RecoverX/app/src/main/res/values/strings.xml << 'EOF'
          <resources><string name="app_name">RecoverX</string></resources>
          EOF

          cat > RecoverX/app/proguard-rules.pro << 'EOF'
          # empty
          EOF

      # === ติดตั้ง/สร้าง Gradle Wrapper แบบเสถียร + ตั้งสิทธิ์ ===
      - name: Install Gradle 8.7 & create wrapper
        shell: bash
        run: |
          set -e
          cd RecoverX
          curl -s https://get.sdkman.io | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install gradle 8.7
          gradle --version
          gradle wrapper --gradle-version 8.7
          chmod +x ./gradlew

      - name: Accept Android licenses & install platforms
        shell: bash
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Build APK
        shell: bash
        run: |
          cd RecoverX
          ./gradlew assembleRelease --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: RecoverX-APK
          path: |
            **/build/outputs/apk/release/*.apk
            **/build/outputs/apk/debug/*.apk
